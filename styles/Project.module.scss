@import "variables";
@import "mixins";

.project {
  // margin-bottom: $size-xl;
  margin-bottom: 10rem;
  display: flex;
  flex-direction: column;
  gap: $size-lg;

  @include respond(desktop) {
    flex-direction: row;
    gap: 15rem;
  }
}

.image_pane,
.content_pane {
  position: relative;
  flex: 50% 1 1; // BUG: Is this why they are not sized even? or are they?

  display: flex;
  justify-content: center;
  align-items: center;

  // border: solid 1px purple;
}

// EVEN PROJECTS ONLY (TEXT LEFT / IMAGE RIGHT)
.project:nth-of-type(even) > .image_pane {
  @include respond(desktop) {
    order: 2;
  }
}
.project:nth-of-type(even) > .content_pane {
  @include respond(desktop) {
    order: 1;
  }
}

.bg_img_left,
.bg_img_right,
.cross_mark_1,
.cross_mark_2,
.dotted_line_odd,
.dotted_line_even,
.watermark_1,
.watermark_2 {
  position: absolute;
}

.bg_img_left,
.bg_img_right {
  width: 130%;

  @include respond(desktop) {
    width: 140%;
  }
}

.images {
  // border: solid 1px hotpink;
  width: 100%;
  z-index: 1;

  transform: rotate(-12deg);

  @include respond(desktop) {
    width: 120%;
    aspect-ratio: 3 /2;
    transform: rotate(0deg);
    display: flex;
  }
}

.image_1,
.image_2 {
  // @include shadow(medium);
  transition: all 500ms ease-in-out;

  @include respond(desktop) {
    position: absolute;
    // width: 120%;
  }
}

.image_1 {
  @include respond(desktop) {
    z-index: 1;
    transform: rotate(-8deg);
  }
}

.images:hover > .image_1 {
  @include respond(desktop) {
    transform: translate(-4rem, -9rem) rotate(-13deg);
  }
}

.image_1:hover {
  @include respond(desktop) {
    z-index: 5;
  }
}

.image_2 {
  @include respond(desktop) {
    transform: translate(-2.4rem, 3.2rem) rotate(-10deg);
  }
}

.images:hover > .image_2 {
  @include respond(desktop) {
    transform: translate(0rem, 12rem) rotate(-2deg);
  }
}

.image_2:hover {
  @include respond(desktop) {
    z-index: 5;
  }
}

.project:nth-of-type(even) {
  .image_1 {
    @include respond(desktop) {
      // z-index: 1;
      transform: rotate(8deg);
    }
  }

  .images:hover > .image_1 {
    @include respond(desktop) {
      transform: translate(4rem, -9rem) rotate(13deg);
    }
  }

  .image_2 {
    @include respond(desktop) {
      transform: translate(2.4rem, 3.2rem) rotate(10deg);
    }
  }

  .images:hover > .image_2 {
    @include respond(desktop) {
      transform: translate(0rem, 12rem) rotate(2deg);
    }
  }
}

.content {
  position: relative;
  // border: solid 1px hotpink;
  max-width: 45rem;

  @include respond(tablet) {
    margin: 5rem 0;
  }

  h3 {
    margin: $size-xl 0 $size-md 0;
  }

  span {
    // content: "";
    display: block;
    height: 0.5rem;
    width: 5rem;
    margin-bottom: $size-md;
    background-color: $color-light-blue;
    border-radius: 1rem;
  }

  p {
    margin-bottom: $size-md;
  }
}

.buttons {
  display: flex;
  gap: $size-md;
  justify-content: center;
  margin-bottom: $size-xl;

  @include respond(desktop) {
    justify-content: flex-start;
  }
}

.live_button,
.github_button {
  font-weight: bold;
  color: $color-white;
  border-radius: $size-xs;
  height: 3.8rem;
  width: 14rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $size-xs;
  transition: all 300ms ease;
  @include shadow(medium);

  &:hover {
    transform: scale(1.03);
    // @include shadow(medium);
    @include shadow(large);
  }

  svg {
    width: 2rem;
    height: 2rem;
  }
}

.live_button {
  background-color: $color-purple;
}

.github_button {
  background-color: $color-black;
}

// DECORATIVE IMAGES (CROSSMARKS & WATERMARKS) ////////////
.dotted_line_even,
.dotted_line_odd {
  display: none;

  @include respond(desktop) {
    display: block;
  }
}

.dotted_line_even {
  width: 50%;
  top: 15%;
  left: -50%;
}

.dotted_line_odd {
  width: 55%;
  top: 10%;
  right: -35%;
}

.watermark_1,
.watermark_2 {
  width: 20rem;
  // height: 20rem;

  @include respond(tablet) {
    width: 30rem;
  }

  @include respond(tablet) {
    width: 60%;
  }
}

.cross_mark_1,
.cross_mark_2 {
  width: 2rem;

  @include respond(tablet) {
    width: 3rem;
  }
}

.watermark_1 {
  top: 0rem;
  left: 0rem;
  transform: rotate(-8deg);

  @include respond(tablet) {
    top: 5%;
    left: -20%;
  }
}

.watermark_2 {
  bottom: 0rem;
  right: 0rem;
  transform: rotate(10deg);

  @include respond(tablet) {
    bottom: 15%;
    right: -15%;
  }
}

.cross_mark_1 {
  top: 15%;
  right: 30%;
  transform: rotate(0deg);

  @include respond(tablet) {
    top: 5%;
  }
}

.cross_mark_2 {
  bottom: 5%;
  left: 5%;
  transform: rotate(45deg);

  @include respond(tablet) {
    bottom: -5%;
  }
}

// EVEN PROJECTS ONLY (TEXT LEFT / IMAGE RIGHT)
.project:nth-of-type(even) > .content_pane {
  .watermark_1 {
    top: auto;
    left: 0rem;
    bottom: 0rem;

    @include respond(tablet) {
      left: -15%;
      bottom: 10%;
    }
  }

  .watermark_2 {
    top: 0rem;
    right: 0rem;
    bottom: auto;

    @include respond(tablet) {
      right: -10%;
    }
  }

  .cross_mark_1 {
    top: 8%;
    left: -4%;
    right: auto;
    transform: rotate(45deg);

    @include respond(tablet) {
      top: 2%;
      left: -6%;
    }
  }

  .cross_mark_2 {
    bottom: 5%;
    left: auto;
    right: 25%;
    transform: rotate(0deg);

    @include respond(tablet) {
      bottom: -5%;
      right: 20%;
    }
  }
}
